#!/bin/sh

#### Recipe Variable Definitions ###############################################
JAIL_IP="${JAILS_LAN_SUBNET_C}.30"                                             # Optional:  ip address given to the jail (see FDo IP Policy)
RECIPE_PACKAGES="nginx"                                                        # Optional:  packages to install in the jail
RECIPE_REQUIRES_JAIL_RESTART="no"                                              # Mandatory: set to "yes" if the jail requires a restart after cooking
RECIPE_REQUIRES_NAT_RELOAD="yes"                                               # Mandatory: set to "yes" if the hosts NAT (pf/ppp) requires a restart after cooking
RECIPE_TCP_PORTS="80,443"                                                      # Optional:  tcp ports to forward, necessary for port forwarding
RECIPE_UDP_PORTS="none"                                                        # Optional:  udp ports to forward, necessary for port forwarding
START_JAIL_SERVICES="nginx"                                                    # Optional:  jail services started after cooking (in left to right order)
SIDES_FILESYSTEMS=""                                                           # Optional:  names of additional ZFS filesystems required for recipe
SIDES_MOUNTPOINTS=""                                                           # Optional:  mountpoints of additional ZFS filesystems required for recipe
NOHOST_CERT_FILE="/usr/local/etc/ssl/certs/nohost.pem"                         #
################################################################################

prep_recipe ()
{
	PREP_SUCCESS="yes"
}

cook_recipe ()
{

	echo -e "\n${YELL}Next we need to install the recipe packages into the jail."
	echo -e "Please accept when prompted...${NRML}\n"
	sleep 5

	# Install essential jail recipe packages from the recipe repo
	pkg -j ${JAIL_NAME} install ${RECIPE_PACKAGES}
	if [ ${?} -ne 0 ]
	then
		echo -e "\n${LRED}ERROR:${NRML} Installing of recipe packages failed.\n"
		RECIPE_SUCCESS="no"
		return
	fi

	## TODO: ask for number of worker processes
	WORKER_PROCESSES=`sysctl hw.ncpu | awk '{print $2}'`

	# Replace variables in nginx.conf file
	sed -i "" "s/WORKER_PROCESSES/${WORKER_PROCESSES}/" configs/${JAIL_NAME}@${HOST_NAME}/usr/local/etc/nginx/nginx.conf

	# Replace variables in hosts file
	sed -i "" "s/JAIL_IP/${JAIL_IP}/" configs/${JAIL_NAME}@${HOST_NAME}/etc/hosts
	sed -i "" "s/JAIL_HOST_NAME/${JAIL_HOST_NAME}/" configs/${JAIL_NAME}@${HOST_NAME}/etc/hosts

	openssl req -new -newkey rsa:1024 -days 3650 -nodes -x509 -subj "/C=ZZ/ST=None/L=None/O=None/CN=nohost" -keyout ${NOHOST_CERT_FILE} -out ${NOHOST_CERT_FILE}

	# Get seasoning suggestion message from recipe.conf.
	SEASONING_SUGGESTION_MSG=`${UCL_CMD} get -f configs/${JAIL_NAME}@${HOST_NAME}${RECIPE_CONF_PATH} .seasoning_suggestion.message`

	# Echo the seasoning suggestion message to the terminal, expanding any variables.
	eval echo -e "\"\n${YELL}Seasoning suggestion:${NRML}\n${SEASONING_SUGGESTION}\n\""

	# Set the seasoning suggestion message in recipe.conf after expanding any variables.
	EXPANDED_SEASONING_SUGGESTION_MSG=`eval echo -e "\"${SEASONING_SUGGESTION}\""`
	${UCL_CMD} set -f configs/${JAIL_NAME}@${HOST_NAME}${RECIPE_CONF_PATH} .seasoning_suggestion.message "${EXPANDED_SEASONING_SUGGESTION_MSG}"

	pause_prompt 15

	# Mandatory: return code
	RECIPE_SUCCESS="yes"

}
