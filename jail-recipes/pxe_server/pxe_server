#!/bin/sh

#### Recipe Variable Definitions ###############################################
RECIPE_JAIL_IP="${JAILS_LAN_SUBNET_C}.46"                                      # Optional:  ip address given to the jail (see FDo IP Policy).
RECIPE_PACKAGES="ftp/tftp-hpa"                                                 # Optional:  packages to install in the jail.
RECIPE_COMPAT=1                                                                # Mandatory: Compatability level indicator.
RECIPE_REQUIRES_JAIL_RESTART="no"                                              # Mandatory: "yes" if the jail requires a restart after cooking.
RECIPE_REQUIRES_PORT_FORWARD="no"                                              # Mandatory: "yes" if the hosts NAT (pf/ppp) requires a restart after cooking.
RECIPE_REQUIRES_HTTP_GATEWAY="no"                                              # Mandatory:  whether this recipe requires an http gateway site.
RECIPE_REQUIRES_DNS_HOSTNAME="no"                                              # Mandatory:  whether his recipe requires a caching DNS hostname override.
START_JAIL_SERVICES="tftpd"                                                    # Optional:  jail services started after cooking (in left to right order).
SIDES_FILESYSTEMS="${SIDES_POOL_NAME}/pxe_server-images"                       # Optional:  names of additional ZFS filesystems required for recipe.
SIDES_MOUNTPOINTS="/jls/${JAIL_NAME}/tftpboot/images"                          # Optional:  mountpoints of additional ZFS filesystems required for recipe.
TFTPBOOT_HOST=${TFTPBOOT_HOST:-"${JAILS_LAN_SUBNET_C}.46"}                     #
IMAGES_DIR="/jls/${JAIL_NAME}/tftpboot/images"                                 #
SYSLINUX_VERSION="6.03"                                                        ###################################
SYSLINUX_URL="https://www.kernel.org/pub/linux/utils/boot/syslinux/"                                             #
SYSLINUX_TARBALL="syslinux-${SYSLINUX_VERSION}.tar.gz"                                                           #
CLONEZILLA_VERSION="2.5.0-5"                                                                                     #
CLONEZILLA_URL="http://nchc.dl.sourceforge.net/project/clonezilla/clonezilla_live_stable/${CLONEZILLA_VERSION}/" #
CLONEZILLA_ARCHIVE="clonezilla-live-${CLONEZILLA_VERSION}-i686-pae"                                              #
##################################################################################################################

prep_recipe ()
{
	echo -e "\n${ORNG}NOTICE:${NRML} This jail recipe requires that a 'dhcp_server' recipe is cooked and"
	echo -e "        running on your network. To cook the required 'dhcp_server' recipe on"
	echo -e "        this host use the command:"
	echo -e "${LBLU}${SCRIPT_NAME} create-recipe-jail dhcp dhcp dhcp_server${NRML}\n"

	question_yes_no "Would you like to continue to cook this jail recipe?"
	if [ "${ANSWER}" = "no" ]
	then
		PREP_SUCCESS="no"
		return
	fi

	echo -e "\n${ORNG}NOTICE:${NRML} This jail recipe requires additional filesystems be created:"
	echo -e "        A filesystem named 'pxe_server-images' to store PXE boot images."
	echo -e "        If prompted, select a pool to store the additional filesystem(s).\n"

	question_yes_no "Would you like to continue to cook this jail recipe?"
	if [ "${ANSWER}" = "no" ]
	then
		PREP_SUCCESS="no"
		return
	fi

	PREP_SUCCESS="yes"
}

cook_recipe ()
{

	# Replace variables in the pxelinux.cfg/default config file.
	sed -i "" "s/CLONEZILLA_VERSION/${CLONEZILLA_VERSION}/g" configs/${JAIL_NAME}@${HOST_NAME}/tftpboot/pxelinux.cfg/default
	ERROR_COUNT=$(( ${ERROR_COUNT} + ${?} ))
	sed -i "" "s/TFTPBOOT_HOST/${TFTPBOOT_HOST}/" configs/${JAIL_NAME}@${HOST_NAME}/tftpboot/pxelinux.cfg/default
	ERROR_COUNT=$(( ${ERROR_COUNT} + ${?} ))
	if [ ${ERROR_COUNT} -ne 0 ]
	then
		echo -e "\n${LRED}ERROR:${NRML} Failed trying to update PXELINUX default config file.\n"
		RECIPE_SUCCESS="no"
		return
	fi

	echo -e "\n${YELL}Downloading recipe resources...${NRML}\n"

	# Download recipe resources.
	fetch -o ${IMAGES_DIR} ${CLONEZILLA_URL}${CLONEZILLA_ARCHIVE}.zip
	ERROR_COUNT=$(( ${ERROR_COUNT} + ${?} ))
	fetch -o /jls/${JAIL_NAME}/tftpboot ${SYSLINUX_URL}${SYSLINUX_TARBALL}
	ERROR_COUNT=$(( ${ERROR_COUNT} + ${?} ))
	if [ ${ERROR_COUNT} -ne 0 ]
	then
		echo -e "\n${LRED}ERROR:${NRML} Failed trying to download Clonezilla resource files.\n"
		RECIPE_SUCCESS="no"
		return
	fi

	echo -e "\n${YELL}Preparing PXELINUX resources...${NRML}\n"

	# Extract syslinux tarball and symlink pxe linux kernel files to tftpboot path.
	tar -x -C /jls/${JAIL_NAME}/tftpboot/ -f /jls/${JAIL_NAME}/tftpboot/${SYSLINUX_TARBALL}
	ERROR_COUNT=$(( ${ERROR_COUNT} + ${?} ))
	ln -s syslinux-${SYSLINUX_VERSION}/bios/core/pxelinux.0 /jls/${JAIL_NAME}/tftpboot/pxelinux.0
	ERROR_COUNT=$(( ${ERROR_COUNT} + ${?} ))
	ln -s syslinux-${SYSLINUX_VERSION}/bios/com32/elflink/ldlinux/ldlinux.c32 /jls/${JAIL_NAME}/tftpboot/ldlinux.c32
	ERROR_COUNT=$(( ${ERROR_COUNT} + ${?} ))
	ln -s syslinux-${SYSLINUX_VERSION}/bios/com32/libutil/libutil.c32 /jls/${JAIL_NAME}/tftpboot/libutil.c32
	ERROR_COUNT=$(( ${ERROR_COUNT} + ${?} ))
	ln -s syslinux-${SYSLINUX_VERSION}/bios/com32/menu/menu.c32 /jls/${JAIL_NAME}/tftpboot/menu.c32
	ERROR_COUNT=$(( ${ERROR_COUNT} + ${?} ))
	if [ ${ERROR_COUNT} -ne 0 ]
	then
		echo -e "\n${LRED}ERROR:${NRML} Failed trying to prepare PXELINUX resources.\n"
		RECIPE_SUCCESS="no"
		return
	fi

	echo -e "\n${YELL}Extracting Clonezilla archive into bootable images directory...${NRML}\n"

	# Extract Clonezilla archive.
	unzip -q -d ${IMAGES_DIR}/${CLONEZILLA_ARCHIVE} ${IMAGES_DIR}/${CLONEZILLA_ARCHIVE}.zip
	ERROR_COUNT=$(( ${ERROR_COUNT} + ${?} ))
	if [ ${ERROR_COUNT} -ne 0 ]
	then
		echo -e "\n${LRED}ERROR:${NRML} Failed trying to extract Clonezilla archive.\n"
		RECIPE_SUCCESS="no"
		return
	fi

	# Delete downloaded tarballs.
	rm ${IMAGES_DIR}/${CLONEZILLA_ARCHIVE}.zip
	ERROR_COUNT=$(( ${ERROR_COUNT} + ${?} ))
	rm /jls/${JAIL_NAME}/tftpboot/${SYSLINUX_TARBALL}
	ERROR_COUNT=$(( ${ERROR_COUNT} + ${?} ))
	if [ ${ERROR_COUNT} -ne 0 ]
	then
		echo -e "\n${LRED}WARNING:${NRML} Failed trying to remove downloaded resources.\n"
	fi

	# Mandatory: return code.
	RECIPE_SUCCESS="yes"

}
