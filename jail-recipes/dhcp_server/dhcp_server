#!/bin/sh

#### Recipe Variable Definitions ###############################################
JAIL_IP="${JAILS_LAN_SUBNET_C}.48"                                             # Optional:  ip address given to the jail (see FDo IP Policy)
RECIPE_PACKAGES="isc-dhcp44-server"                                            # Optional:  packages to install in the jail
RECIPE_COMPAT=1                                                                # Mandatory: Compatability level indicator
RECIPE_REQUIRES_JAIL_RESTART="yes"                                             # Mandatory: set to "yes" if the jail requires a restart after cooking
RECIPE_REQUIRES_NAT_RELOAD="no"                                                # Mandatory: set to "yes" if the hosts NAT (pf/ppp) requires a restart after cooking
START_JAIL_SERVICES="isc-dhcpd"                                                # Optional:  jail services started after cooking (in left to right order)
SIDES_FILESYSTEMS=""                                                           # Optional:  names of additional ZFS filesystems required for recipe
SIDES_MOUNTPOINTS=""                                                           # Optional:  mountpoints of additional ZFS filesystems required for recipe
DNS_UPSTREAM_IP=${DNS_UPSTREAM_IP:-"1.1.1.1, 8.8.8.8"}                         #
DNS_CACHE_IP=${DNS_CACHE_IP:-"${JAILS_LAN_SUBNET_C}.47"}                       #
PXE_SERVER_IP=${PXE_SERVER_IP:-"${JAILS_LAN_SUBNET_C}.46"}                     #
################################################################################

prep_recipe ()
{
	# Get the LAN network interface name
	LAN_NET_IFACE=`${UCL_CMD} get -f ${HOST_CONF_PATH} -q .network.interface.lan.id`
	if [ ${?} -ne 0 ] || [ "${LAN_NET_IFACE}" = "null" ] || [ "${LAN_NET_IFACE}" = "" ]
	then
		PREP_SUCCESS="no"
		return
	fi

	# DHCP can not run on lo1
	if [ "${LAN_NET_IFACE}" = "lo1" ]
	then
		echo -e "\n${LRED}ERROR:${NRML} A DHCP server can not be run on lo1 (loopback interface).\n"
		PREP_SUCCESS="no"
		return
	fi

	echo -e "\n${ORNG}NOTICE:${NRML} It's recommended that a 'dns_cache' recipe (caching DNS server) is"
	echo -e   "        cooked and running on the LAN (local network) prior to cooking this"
	echo -e   "        recipe. To cook a 'dns_cache' recipe, run the following command on this"
	echo -e   "        host (or another FDo server host on this LAN):"
	echo -e   "        ${LBLU}${SCRIPT_NAME} dns dns dns_cache${NRML}\n"

	question_yes_no "Would you like to continue to cook this jail recipe?"
	if [ "${ANSWER}" = "no" ]
	then
		PREP_SUCCESS="no"
		return
	fi

	PREP_SUCCESS="yes"
}

cook_recipe ()
{

	echo -e "\n${YELL}Next we need to install the recipe packages into the jail.${NRML}"
	echo -e "${YELL}Please accept when prompted...${NRML}\n"
	sleep 5

	# Install essential jail recipe packages from the recipe repo
	pkg -j ${JAIL_NAME} install ${RECIPE_PACKAGES}
	if [ ${?} -ne 0 ]
	then
		echo -e "\n${LRED}ERROR:${NRML} Installing of recipe packages failed.\n"
		RECIPE_SUCCESS="no"
		return
	fi

	# Determine if a caching dns server is running on the LAN
	echo -e "\n${YELL}Determining if an FDo caching DNS server is running on this LAN...${NRML}\n"
	host localhost ${DNS_CACHE_IP} > /dev/null 2>&1
	if [ ${?} -eq 0 ]
	then
		DNS_IP=${DNS_CACHE_IP}
	else
		DNS_IP=${DNS_UPSTREAM_IP}
	fi

	# Add necessary devfs rules for isc-dhcpd to work
	echo "" >> configs/${HOST_NAME}/etc/devfs.rules
	echo "[dhcp_server_jail_ruleset=48]" >> configs/${HOST_NAME}/etc/devfs.rules
	echo "add include \$devfsrules_hide_all" >> configs/${HOST_NAME}/etc/devfs.rules
	echo "add include \$devfsrules_unhide_basic" >> configs/${HOST_NAME}/etc/devfs.rules
	echo "add include \$devfsrules_unhide_login" >> configs/${HOST_NAME}/etc/devfs.rules
	echo "add path 'bpf*' unhide" >> configs/${HOST_NAME}/etc/devfs.rules
	echo "add path net unhide" >> configs/${HOST_NAME}/etc/devfs.rules
	echo "add path 'net/*' unhide" >> configs/${HOST_NAME}/etc/devfs.rules

	# Add extra jail control directives to /etc/jail.conf
	sed -i "" "s/${JAIL_NAME}.*{.*$/${JAIL_NAME} {\\${CARRIAGE_RETURN}        allow.raw_sockets = 1;\\${CARRIAGE_RETURN}        devfs_ruleset = 48;/" configs/${HOST_NAME}/etc/jail.conf

	# Replace the LAN_NET_IFACE variable in the jails' rc.conf config file
	sed -i "" "s/LAN_NET_IFACE/${LAN_NET_IFACE}/" configs/${JAIL_NAME}@${HOST_NAME}/etc/rc.conf

	# Replace the variables in the dhcpd.conf config file
	sed -i "" "s/FDO_LAN_SUBNET_B/${FDO_LAN_SUBNET_B}/" configs/${JAIL_NAME}@${HOST_NAME}/usr/local/etc/dhcpd.conf
	sed -i "" "s/FDO_LAN_SUBNET_MASK/${FDO_LAN_SUBNET_MASK}/" configs/${JAIL_NAME}@${HOST_NAME}/usr/local/etc/dhcpd.conf
	sed -i "" "s/GUESTS_LAN_SUBNET_C/${GUESTS_LAN_SUBNET_C}/g" configs/${JAIL_NAME}@${HOST_NAME}/usr/local/etc/dhcpd.conf
	sed -i "" "s/DOMAIN_NAME/${DOMAIN_NAME}/" configs/${JAIL_NAME}@${HOST_NAME}/usr/local/etc/dhcpd.conf
	sed -i "" "s/FDO_DNS_IP/${DNS_IP}/" configs/${JAIL_NAME}@${HOST_NAME}/usr/local/etc/dhcpd.conf
	sed -i "" "s/FDO_PXE_SERVER_IP/${PXE_SERVER_IP}/" configs/${JAIL_NAME}@${HOST_NAME}/usr/local/etc/dhcpd.conf
	# ASSUME that {FDO_LAN_GATEWAY_IP} is always the LAN gateway
	sed -i "" "s/FDO_LAN_GATEWAY_IP/${FDO_LAN_GATEWAY_IP}/" configs/${JAIL_NAME}@${HOST_NAME}/usr/local/etc/dhcpd.conf

	# Mandatory: return code
	RECIPE_SUCCESS="yes"

}
