#!/bin/sh

# Copyright (c) 2016 Euan Thoms <euan@potensol.com>.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


##### GLOBAL STATIC VARIABLE DECLARATIONS ######################################

SCRIPT_NAME=`basename ${0}`
NUM_MANDATORY_ARGS=0
IMAP_MBOX_MGMNT_CMD=cyradm
IMAP_MBOX_MGMNT_USER=cyrus
IMAP_MBOX_MGMNT_HOST=localhost
RECIPE_NAME="imap_server"
DIALOG_OUT_FILE="/tmp/${SCRIPT_NAME}.dialog.answer"
UCL_CMD="/usr/local/bin/uclcmd"
FDO_CONFIG_ROOT=${FDO_CONFIG_ROOT:-"/usr/local/etc/fdo"}
RECIPE_CONF_PATH=${RECIPE_CONF_PATH:-"${FDO_CONFIG_ROOT}/recipe.conf"}

TERM="xterm"
LRED="\033[1;31m"
LGRN="\033[1;32m"
LBLU="\033[1;34m"
LCYN="\033[1;36m"
CYAN="\033[0;36m"
YELL="\033[1;33m"
ORNG="\033[0;33m"
GREY="\033[0;37m"
DGRY="\033[1;30m"
NRML="\033[0;00m"

CARRIAGE_RETURN="
"

##### COMMAND USAGE INFO #######################################################

usage ()
{
	if [ "${NO_DISPLAY_USAGE}" = "yes" ]
	then
		return 1
	fi

	echo -e ""
	echo -e "${LCYN}    ---- ${SCRIPT_NAME} command usage ----${NRML}"
	echo -e ""
	echo -e "${YELL}Description:${NRML} Quick way to manage a FDo IMAP server."
	echo -e ""
	echo -e "${YELL}Usage:   ${LGRN}${SCRIPT_NAME} [--help]${NRML}"
	echo -e "${NRML}Example: ${LBLU}${SCRIPT_NAME}${NRML}"
	echo -e ""
	echo -e "${YELL}Options:${NRML}"
	echo -e ""
	echo -e "${YELL}--help    Display command usage.${NRML}"
	echo -e ""
}


##### PARSE ARGUMENTS ##########################################################

ARG_INDEX=1
for ARG in "${@}"
do
	if [ ${ARG_INDEX} -gt ${NUM_MANDATORY_ARGS} ]
	then
		OPTIONAL_ARG_NAME=`echo ${ARG} | cut -d= -f1`
		OPTIONAL_ARG_VALUE=`echo ${ARG} | cut -d= -f2`
		case ${OPTIONAL_ARG_NAME} in
			--help)
				usage
				exit
				;;
			*)
				echo -e "\n${LRED}ERROR:${NRML} Invalid argument!\n       Aborting.\n"
				usage
				exit 1
				;;
		esac
	fi

	ARG_INDEX=$(( ${ARG_INDEX} + 1 ))

done


##### FUNCTIONS ################################################################

# source readee function
. /usr/local/bin/fdo-readee

question_yes_no ()
{
	while true
		do
		echo -e "${LCYN}${1}${NRML}"
		readee -p "${LCYN}(yes/no): ${NRML}" ANSWER
		if [ "${ANSWER}" = "yes" ] || [ "${ANSWER}" = "no" ]
		then
			break
		fi
		echo ""
	done
}

test_if_host ()
{
	procstat 0 > /dev/null 2>&1
	if [ ${?} -eq 0 ]
	then
		IS_HOST=yes
	else
		IS_HOST=no
	fi
}

find_jails_from_recipe_name ()
{
	FIND_RECIPE_NAME="${1}"
	FOUND_RECIPE_JAILS=""
	for TEST_JAIL_NAME in `ls -1 /jls | cut -d/ -f1`
	do
		if [ -f "/jls/${TEST_JAIL_NAME}${RECIPE_CONF_PATH}" ]
		then
			TEST_RECIPE_NAME=`${UCL_CMD} get -f /jls/${TEST_JAIL_NAME}${RECIPE_CONF_PATH} -q .general.jail_recipe`
			if [ "${TEST_RECIPE_NAME}" = "${FIND_RECIPE_NAME}" ]
			then
				if [ "${FOUND_RECIPE_JAILS}" = "" ]
				then
					FOUND_RECIPE_JAILS="${TEST_JAIL_NAME}"
				else
					FOUND_RECIPE_JAILS="${FOUND_RECIPE_JAILS} ${TEST_JAIL_NAME}"
				fi
			fi
		fi
	done
}

get_jail_id_from_name ()
{
	# ${1} is jail name

	JAIL_ID_FILE=`ls -1 /var/run/jail_${1}.id 2> /dev/null | head -1`
	if [ "${JAIL_ID_FILE}" = "" ] 
	then
		echo -e "\n${LRED}ERROR:${NRML} Could not identify jail id from jail name.\n"
		JAIL_ID=-1
		return 1
	fi
	JAIL_ID=`cat ${JAIL_ID_FILE}`

}


##### SANITY TESTS #############################################################

if [ ${#} -lt ${NUM_MANDATORY_ARGS} ]
then
	echo -e "\n${LRED}ERROR:${NRML} Incorrect number of arguments!\n       Aborting.\n"
	usage
	exit 1
fi

# Check we are running with root privileges.
if [ `id -u` -ne 0 ]
then
	echo -e "\n${LRED}ERROR:${NRML} This command must be run with root (super-user) privileges!\n       Aborting.\n"
	exit 1
fi


##### MAIN EXECUTION THREAD ####################################################

ERROR_COUNT=0

test_if_host

JAIL_NAME=""
CMD_PREFIX=""

if [ "${IS_HOST}" = "yes" ]
then
	# Let's try to find the jail
	find_jails_from_recipe_name ${RECIPE_NAME}
	NUM_FOUND_JAILS=`echo ${FOUND_RECIPE_JAILS} | wc -w`
	if [ ${NUM_FOUND_JAILS} -lt 1 ]
	then
		echo -e "\n${LRED}ERROR:${NRML} Unable to find a '${RECIPE_NAME}' recipe jail!\n       Aborting.\n"
		usage
		exit 1
	fi
	if [ ${NUM_FOUND_JAILS} -lt 2 ]
	then
		JAIL_NAME=${FOUND_RECIPE_JAILS}
	else
		SELECT_JAIL_PROMPT="Select the IMAP server jail to edit:"
		while [ "${JAIL_NAME}" = "" ]
		do
			dialog --no-items --no-cancel --menu "${SELECT_JAIL_PROMPT}" 12 40 10 ${FOUND_RECIPE_JAILS} 2> ${DIALOG_OUT_FILE}
			JAIL_NAME_TEMP=`cat ${DIALOG_OUT_FILE}`
			echo -e "\n"
			question_yes_no "\nYou have selected '${JAIL_NAME_TEMP}' as the IMAP jail to edit.\nIs this correct?"
			if [ "${ANSWER}" = "yes" ]
			then
				JAIL_NAME="${JAIL_NAME_TEMP}"
				break
			fi
			sleep 4
		done
	fi
	get_jail_id_from_name ${JAIL_NAME}
	CMD_PREFIX="jexec ${JAIL_ID}"  
fi

# Test if the management command exists
${CMD_PREFIX} which "${IMAP_MBOX_MGMNT_CMD}" > /dev/null 2>&1
if [ ${?} -ne 0 ]
then
	echo -e "\n${LRED}ERROR:${NRML} The IMAP management command '${IMAP_MBOX_MGMNT_CMD}' does not exist!\n       Aborting.\n"
	exit 1
fi

${CMD_PREFIX} ${IMAP_MBOX_MGMNT_CMD} -user ${IMAP_MBOX_MGMNT_USER} ${IMAP_MBOX_MGMNT_HOST}

if [ ${ERROR_COUNT} -gt 0 ]
then
	exit 2
fi

################################################################################
