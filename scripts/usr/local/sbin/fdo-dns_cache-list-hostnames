#!/bin/sh

# Copyright (c) 2016 Euan Thoms <euan@potensol.com>.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


##### GLOBAL STATIC VARIABLE DECLARATIONS ######################################

SCRIPT_NAME=`basename ${0}`
NUM_MANDATORY_ARGS=0
EXCLUDED_ZONES=".arpa\"|\"localhost\"|\"test\"|\"example\"|\"invalid\"|\"example.com\"|\"example.net\"|\"example.org\"|\"ip6.int\"|\"\.\""
DNS_CACHE_SERVER_FOUND="no"

TERM="xterm"
LRED="\033[1;31m"
LGRN="\033[1;32m"
LBLU="\033[1;34m"
LCYN="\033[1;36m"
CYAN="\033[0;36m"
YELL="\033[1;33m"
ORNG="\033[0;33m"
GREY="\033[0;37m"
DGRY="\033[1;30m"
NRML="\033[0;00m"

CARRIAGE_RETURN="
"

##### COMMAND USAGE INFO #######################################################

usage ()
{
	if [ "${NO_DISPLAY_USAGE}" = "yes" ]
	then
		return 1
	fi

	echo -e ""
	echo -e "${LCYN}    ---- ${SCRIPT_NAME} command usage ----${NRML}"
	echo -e ""
	echo -e "${YELL}Description:${NRML} List hostname zones of FDo dns_cache jail services on this host."
	echo -e ""
	echo -e "${YELL}Usage:   ${LGRN}${SCRIPT_NAME} [--help]${NRML}"
	echo -e "${NRML}Example: ${LBLU}${SCRIPT_NAME}${NRML}"
	echo -e ""
	echo -e "${YELL}Options:${NRML}"
	echo -e ""
	echo -e "${YELL}         --help ; Display command usage.${NRML}"
	echo -e ""
}


##### PARSE ARGUMENTS ##########################################################

ARG_INDEX=1
for ARG in "${@}"
do
	if [ ${ARG_INDEX} -gt ${NUM_MANDATORY_ARGS} ]
	then
		OPTIONAL_ARG_NAME=`echo ${ARG} | cut -d= -f1`
		OPTIONAL_ARG_VALUE=`echo ${ARG} | cut -d= -f2`
		case ${OPTIONAL_ARG_NAME} in
			--help)
				usage
				exit
				;;
			*)
				echo -e "\n${LRED}ERROR:${NRML} Invalid argument!\n       Aborting.\n"
				usage
				exit 1
				;;
		esac
	fi

	ARG_INDEX=$(( ${ARG_INDEX} + 1 ))

done


##### FUNCTIONS ################################################################

test_if_host ()
{
	procstat 0 > /dev/null 2>&1
	if [ ${?} -eq 0 ]
	then
		IS_HOST=yes
	else
		IS_HOST=no
	fi
}


##### SANITY TESTS #############################################################

if [ ${#} -lt ${NUM_MANDATORY_ARGS} ]
then
	echo -e "\n${LRED}ERROR:${NRML} Incorrect number of arguments!\n       Aborting.\n"
	usage
	exit 1
fi

# Check we are running with root privileges.
if [ `id -u` -ne 0 ]
then
	echo -e "\n${LRED}ERROR:${NRML} This command must be run with root (super-user) privileges!\n       Aborting.\n"
	exit 1
fi

test_if_host

if [ "${IS_HOST}" = "no" ]
then
	echo -e "\n${LRED}ERROR:${NRML} This command must be run from the host!\n       Aborting.\n"
	exit 1
fi


##### MAIN EXECUTION THREAD ####################################################

ERROR_COUNT=0

# Iterate through all jails...
for JAIL_NAME in `ls -1 /jls 2> /dev/null | cut -d/ -f1 | egrep -v "template"`
do
	NAMED_CONF_PATH="/jls/${JAIL_NAME}/usr/local/etc/namedb/named.conf"

	# ...and if a bind server exists...
	if [ -f "${NAMED_CONF_PATH}" ]
	then
		# ...determine if it's a caching server
		cat "${NAMED_CONF_PATH}" | egrep $'^[ \t]*forwarders[ \t]*{' > /dev/null 2>&1
		if [ ${?} -eq 0 ] 
		then
			DNS_CACHE_SERVER_FOUND=yes

			# Now that we've found a caching server, let's list the hostname zones:
			# |Hostname (64)|IP Address (16)|
			echo -e ""
			echo -e "${GREY}================================================================================${NRML}"
			echo -e "${NRML}Hostname                                                        ${LBLU}IP Address      ${NRML}"
			echo -e "${GREY}================================================================================${NRML}"

			IFS=${CARRIAGE_RETURN}
			ZONES=`cat ${NAMED_CONF_PATH} | egrep "^zone \"" | egrep -v ${EXCLUDED_ZONES} | cut -d'"' -f2`
			for ZONE in ${ZONES}
			do
				ZONE_FILE_PATH=`cat ${NAMED_CONF_PATH} | egrep "^zone \"${ZONE}\"" | cut -d'"' -f4`
				HOST_IP=`cat "/jls/${JAIL_NAME}/${ZONE_FILE_PATH}" | egrep "^${ZONE}" | awk '{print $3}'`
				printf "${NRML}%-64s${LBLU}%-16s${NRML}\n" ${ZONE} ${HOST_IP}
				echo -e "${GREY}--------------------------------------------------------------------------------${NRML}"
			done
		fi
	fi
done

if [ "${DNS_CACHE_SERVER_FOUND}" = "no" ]
then
	echo -e "\n${LRED}ERROR:${NRML} No valid dns_cache server was found!\n       Aborting.\n"
	exit 1
fi

echo -e ""

################################################################################
