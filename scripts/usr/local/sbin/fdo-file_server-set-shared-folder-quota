#!/bin/sh

# Copyright (c) 2016 Euan Thoms <euan@potensol.com>.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


##### GLOBAL STATIC VARIABLE DECLARATIONS ######################################

SCRIPT_NAME=`basename ${0}`
SITE_NAME="${1}"
SHARE_PATH="${2}"
QUOTA="${3}"
NUM_MANDATORY_ARGS=3
RECIPE_NAME="file_server"
UCL_CMD="/usr/local/bin/uclcmd"
FDO_CONFIG_ROOT=${FDO_CONFIG_ROOT:-"/usr/local/etc/fdo"}
RECIPE_CONF_PATH=${RECIPE_CONF_PATH:-"${FDO_CONFIG_ROOT}/recipe.conf"}

TERM="xterm"
LRED="\033[1;31m"
LGRN="\033[1;32m"
LBLU="\033[1;34m"
LCYN="\033[1;36m"
CYAN="\033[0;36m"
YELL="\033[1;33m"
ORNG="\033[0;33m"
GREY="\033[0;37m"
DGRY="\033[1;30m"
NRML="\033[0;00m"

CARRIAGE_RETURN="
"

##### COMMAND USAGE INFO #######################################################

usage ()
{
	if [ "${NO_DISPLAY_USAGE}" = "yes" ]
	then
		return 1
	fi

	echo -e ""
	echo -e "${LCYN}    ---- ${SCRIPT_NAME} command usage ----${NRML}"
	echo -e ""
	echo -e "${YELL}Description:${NRML} Set the quota for a specified file_server share."
	echo -e ""
	echo -e "${YELL}Usage:   ${LGRN}${SCRIPT_NAME} site_name share_path quota${NRML}"
	echo -e "${NRML}Example: ${LBLU}${SCRIPT_NAME} acme-aus 'Explosives/TNT' 100G${NRML}"
	echo -e ""
}


##### PARSE ARGUMENTS ##########################################################

ARG_INDEX=1
for ARG in "${@}"
do
	if [ ${ARG_INDEX} -gt ${NUM_MANDATORY_ARGS} ]
	then
		OPTIONAL_ARG_NAME=`echo ${ARG} | cut -d= -f1`
		OPTIONAL_ARG_VALUE=`echo ${ARG} | cut -d= -f2`
		case ${OPTIONAL_ARG_NAME} in
			*)
				echo -e "\n${LRED}ERROR:${NRML} Invalid argument!\n       Aborting.\n"
				usage
				exit 1
				;;
		esac
	fi

	ARG_INDEX=$(( ${ARG_INDEX} + 1 ))

done


##### FUNCTIONS ################################################################

test_if_host ()
{
	procstat 0 > /dev/null 2>&1
	if [ ${?} -eq 0 ]
	then
		IS_HOST=yes
	else
		IS_HOST=no
	fi
}

find_jails_from_recipe_name ()
{
	FIND_RECIPE_NAME="${1}"
	FOUND_RECIPE_JAILS=""
	for TEST_JAIL_NAME in `ls -1 /jls | cut -d/ -f1`
	do
		if [ -f "/jls/${TEST_JAIL_NAME}${RECIPE_CONF_PATH}" ]
		then
			TEST_RECIPE_NAME=`${UCL_CMD} get -f /jls/${TEST_JAIL_NAME}${RECIPE_CONF_PATH} -q .general.jail_recipe`
			if [ "${TEST_RECIPE_NAME}" = "${FIND_RECIPE_NAME}" ]
			then
				if [ "${FOUND_RECIPE_JAILS}" = "" ]
				then
					FOUND_RECIPE_JAILS="${TEST_JAIL_NAME}"
				else
					FOUND_RECIPE_JAILS="${FOUND_RECIPE_JAILS} ${TEST_JAIL_NAME}"
				fi
			fi
		fi
	done
}


##### SANITY TESTS #############################################################

if [ ${#} -lt ${NUM_MANDATORY_ARGS} ]
then
	echo -e "\n${LRED}ERROR:${NRML} Incorrect number of arguments!\n       Aborting.\n"
	usage
	exit 1
fi

test_if_host

if [ "${IS_HOST}" = "no" ]
then
	echo -e "\n${LRED}ERROR:${NRML} This command must be run from the host!\n       Aborting.\n"
	exit 1
fi

zfs list ${WEBDAV_ROOT_FS}/${SITE_NAME}/shares/${SHARE_PATH} > /dev/null 2>&1
if [ ${?} -ne 0 ]
then
	echo -e "\n${LRED}ERROR:${NRML} The referenced file_server share does not exist!\n       Aborting.\n"
	exit 1
fi


##### MAIN EXECUTION THREAD ####################################################

ERROR_COUNT=0

# Let's try to find the jail
find_jails_from_recipe_name ${RECIPE_NAME}
NUM_FOUND_JAILS=`echo ${FOUND_RECIPE_JAILS} | wc -w`
if [ ${NUM_FOUND_JAILS} -lt 1 ]
then
	echo -e "\n${LRED}ERROR:${NRML} Unable to find a '${RECIPE_NAME}' recipe jail!\n       Aborting.\n"
	usage
	exit 1
fi
if [ ${NUM_FOUND_JAILS} -lt 2 ]
then
	JAIL_NAME=${FOUND_RECIPE_JAILS}
else
	echo -e "\n${ORNG}WARNING:${NRML} More than one '${RECIPE_NAME}' recipe jail was found!\         Using the first found recipe jail config.\n"
	JAIL_NAME=`echo ${FOUND_RECIPE_JAILS} | cut -d" " -f1`
fi

# Prefix the recipe.conf path with the jail path.
RECIPE_CONF_PATH="/jls/${JAIL_NAME}${RECIPE_CONF_PATH}"

# Get the webdav root filesystem name from the file_server recipe config file.
WEBDAV_ROOT_FS=`${UCL_CMD} get -f ${RECIPE_CONF_PATH} -q .webdav.root_filesystem`
ERROR_COUNT=$(( ${ERROR_COUNT} + ${?} ))

if [ "${WEBDAV_ROOT_FS}" = "" ] || [ "${WEBDAV_ROOT_FS}" = "null" ]
then
	echo -e "\n${LRED}ERROR:${NRML} The WebDAV root filesystem specified in the config file\n       '${RECIPE_CONF_PATH}'\n       is not valid! Aborting.\n"
	exit 1
fi

# Set the new quota of the ZFS filesystem of the file_server share.
zfs set quota=${QUOTA} ${WEBDAV_ROOT_FS}/${SITE_NAME}/shares/${SHARE_PATH}
ERROR_COUNT=$(( ${ERROR_COUNT} + ${?} ))

if [ ${ERROR_COUNT} -gt 0 ]
then
	exit 2
else
	echo -e "\n${LGRN}Quota has been set to ${QUOTA} for the shared folder ${SHARE_PATH}!${NRML}\n"
fi

################################################################################
